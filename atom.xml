<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mengfei Mu</title>
  
  <subtitle>个人网站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mengfeimu.github.io/"/>
  <updated>2019-10-17T13:52:01.000Z</updated>
  <id>https://mengfeimu.github.io/</id>
  
  <author>
    <name>Mengfei Mu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020公务员考试复习笔记</title>
    <link href="https://mengfeimu.github.io/2019/10/18/%E5%85%AC%E5%8A%A1%E5%91%98%E8%80%83%E8%AF%95%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://mengfeimu.github.io/2019/10/18/公务员考试复习笔记/</id>
    <published>2019-10-17T20:58:16.000Z</published>
    <updated>2019-10-17T13:52:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录错题和不会的知识点。</p><h1 id="容易望文生义或错用的成语"><a href="#容易望文生义或错用的成语" class="headerlink" title="容易望文生义或错用的成语"></a>容易望文生义或错用的成语</h1><p>不刊之论：比喻不能改动或不可磨灭的言论，用来形容文章或言辞的精准得当，无懈可击。</p><p>不经之谈：荒诞、没有根据的话。</p><p>相视莫逆：形容彼此间友谊深厚，无所违逆于心。</p><p>去芜存菁：除去杂质、保留精华。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要记录错题和不会的知识点。&lt;/p&gt;
&lt;h1 id=&quot;容易望文生义或错用的成语&quot;&gt;&lt;a href=&quot;#容易望文生义或错用的成语&quot; class=&quot;headerlink&quot; title=&quot;容易望文生义或错用的成语&quot;&gt;&lt;/a&gt;容易望文生义或错用的成语&lt;/h1&gt;&lt;p&gt;不刊之论：比喻不
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Buckethead下载</title>
    <link href="https://mengfeimu.github.io/2019/10/17/buckethead/"/>
    <id>https://mengfeimu.github.io/2019/10/17/buckethead/</id>
    <published>2019-10-16T21:58:16.000Z</published>
    <updated>2019-10-17T11:41:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>百度贴吧里有个帖子上传了很多Pike系列的百度云链接，大部分可用。<a href="http://tieba.baidu.com/p/2269554764?pn=1" target="_blank" rel="noopener">链接</a></p><p>帖子中大部分均已保存到自己的百度云网盘中。</p><p>这种乱码可以通过sublime软件解决：讲cue文件拖到sublime软件中，将会自动弹出编码格式选择，选择能正常显示文件内容的编码格式即可，如GBK等。</p><p>然后复制所有内容，新建一个cue文件并覆盖原cue文件。完成后重新用XLD软件打开即可。</p><p>另外，<a href="https://www.cdbao.net" target="_blank" rel="noopener">CD音乐包网站</a>也有帖子中有分享，为此，特注册账户（QQ邮箱）（需支付宝付15块获得邀请码）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;百度贴吧里有个帖子上传了很多Pike系列的百度云链接，大部分可用。&lt;a href=&quot;http://tieba.baidu.com/p/2269554764?pn=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;帖子中大部分均已
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>回复审稿意见的艺术</title>
    <link href="https://mengfeimu.github.io/2019/09/26/%E5%AE%A1%E7%A8%BF%E6%84%8F%E8%A7%81/"/>
    <id>https://mengfeimu.github.io/2019/09/26/审稿意见/</id>
    <published>2019-09-26T13:42:22.000Z</published>
    <updated>2019-09-26T04:53:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>Nature Geoscience</em> 2019年9月发表的一篇题为 <em>“The art of responding to reviews”</em> 的 <em>Editorial</em> 文章，讲回复审稿意见的艺术，读来还是很有收获，特此分享。</p><p>原文链接: <a href="https://doi.org/10.1038/s41561-019-0386-7" target="_blank" rel="noopener">https://doi.org/10.1038/s41561-019-0386-7</a></p><blockquote><p>Between submission of your paper and its publication stands the peer-review process. Responding to reviewer comments effectively will help to make this stage an edifying rather than painful experience.</p></blockquote><p><img src="https://media.springernature.com/w300/springer-static/image/art%3A10.1038%2Fs41561-019-0386-7/MediaObjects/41561_2019_386_Figa_HTML.jpg" alt="img"></p><p>Credit: NLshop / Alamy Stock Photo</p><p>A convoluted back-and-forth between authors and reviewers can easily mean months of delay, not to mention effort, anger and anxiety. As editors, we are instrumental in keeping the process on track. We check reviewers for conflicts of interest, keep in touch to ensure reports are on time, and ask them to be as objective and constructive as they can. We also carefully read and evaluate reviewer comments, and request rewrites of inappropriately worded reports. However, authors, too, can make a big difference to how their papers fare with reviewers. Like everyone involved, they have a responsibility to keep the exchanges fruitful and dispassionate, even when perspectives on the science differ.</p><p>We were thus pleased when one of our authors recently appreciated our invitation to reconsider the language of their rebuttal letter, and understood that “it would take superhuman objectivity [from the negative reviewer] to put aside being called ‘obtuse’ (several times)”. To clarify the process: the primary purpose of the rebuttal is to convince the reviewers that all of the points raised have been addressed in an adequate manner — that is, incorporated or refuted. We usually send the authors’ responses to the previous round of review back to all reviewers for their consideration, so the responses should be worded for reviewer consumption. Here, we would like to share our top tips on how to write a rebuttal letter that is likely to avoid unnecessary wrinkles and detours.</p><p><strong>Seek clarity</strong>. Read the reports and the decision letter from your editor more than once. Leave at least one good night’s sleep between readings, before you even start thinking about your rebuttal. If, despite all your efforts and consultation with a friendly colleague, an important comment is not clear or too general to be addressed (such as “section X is bad”), feel free to ask the editor to seek clarification from the reviewer with a specific question.</p><p><strong>Tone of response</strong>. Respond in language that conveys your conviction that the reviewers are knowledgeable, well-meaning people who have given up their time to assess your paper. If you do not hold that conviction, do not let that show in your response, but raise your concerns in a separate cover letter to the editor, with as much evidence and specifics as you can collate.</p><p><strong>Follow through</strong>. A thorough response to the reviewers is only half the ticket. Ensure that in the manuscript itself, you have also addressed all of the comments and requests for clarification. If the reviewers struggled to follow your reasoning, it is likely that others will too.</p><p><strong>Make it easy for editors and reviewers</strong>. The easier it is to assess the revision, the more likely you are to receive a quick answer. It helps to highlight key responses to the most crucial issues at the top; to list changes to the manuscript in your rebuttal letter with the relevant comment and response; and to include line numbers in the revised manuscript and point to them in the response where appropriate.</p><p><strong>Stand up for your science</strong>. Reviewers are as fallible as everybody else. If you believe they made a mistake, explain your reasoning politely and provide compelling support for your point of view. If you think there has been a misunderstanding, explain. There is no point in being dismayed about errors: most likely the subject matter is complicated and you know more about the specific piece of work presented in your paper than the reviewer.</p><p><strong>Make it complete, keep it concise</strong>. Editors and reviewers want to see that all points have been acknowledged and addressed, so do not be tempted to ignore what you do not like. On the other hand, more volume does not make your reasoning sharper, and a long-winded thirty-page rebuttal is more likely to lead reviewers down the path of procrastination than a crisp and clear two-page response. Write as much as you have to, but as little as possible.</p><p><strong>Focus on the substance, not the personalities</strong>. Try to keep yourself from guessing who the reviewers are and what their intentions might be: you have little to win and much to lose. We find that the rate of failure with such guesses — when they are expressed to us — is high. Second-guessing identities is more likely to distract from responding effectively than to help your case.</p><p>If your experience is limited — either with writing rebuttals or with being on the other side, as a peer reviewer — we would recommend that you do not rely solely on our top tips, but in addition find a mentor or colleague to go through your proposed rebuttal and advise.</p><p>It is worth focusing your energy to make your paper as convincing as you can, and the reviewers’ comments are there to help with that. Ultimately, it is the strength of your science that will determine whether your paper is published, and where.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;Nature Geoscience&lt;/em&gt; 2019年9月发表的一篇题为 &lt;em&gt;“The art of responding to reviews”&lt;/em&gt; 的 &lt;em&gt;Editorial&lt;/em&gt; 文章，讲回复审稿意见的艺术，读来还是很有收获，特此分享。&lt;/
      
    
    </summary>
    
      <category term="其他" scheme="https://mengfeimu.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>Cue文件乱码</title>
    <link href="https://mengfeimu.github.io/2019/08/25/cue%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81/"/>
    <id>https://mengfeimu.github.io/2019/08/25/cue文件乱码/</id>
    <published>2019-08-24T21:58:16.000Z</published>
    <updated>2019-08-24T14:02:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时在网上下载的无损格式音乐比如WAV等往往有一个cue文件，记录着分轨信息等，如果乱码，那么用XLD软件转换格式时往往不能分离各个歌曲。</p><p>这种乱码可以通过sublime软件解决：讲cue文件拖到sublime软件中，将会自动弹出编码格式选择，选择能正常显示文件内容的编码格式即可，如GBK等。</p><p>然后复制所有内容，新建一个cue文件并覆盖原cue文件。完成后重新用XLD软件打开即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有时在网上下载的无损格式音乐比如WAV等往往有一个cue文件，记录着分轨信息等，如果乱码，那么用XLD软件转换格式时往往不能分离各个歌曲。&lt;/p&gt;
&lt;p&gt;这种乱码可以通过sublime软件解决：讲cue文件拖到sublime软件中，将会自动弹出编码格式选择，选择能正常显示文
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>macOS软件突然打不开了</title>
    <link href="https://mengfeimu.github.io/2019/08/16/macOS%E8%BD%AF%E4%BB%B6%E6%89%93%E4%B8%8D%E5%BC%80/"/>
    <id>https://mengfeimu.github.io/2019/08/16/macOS软件打不开/</id>
    <published>2019-08-16T14:35:05.000Z</published>
    <updated>2019-08-06T14:14:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>macOS系统下安装的破解软件如Downie，permute等以前可以正常使用的软件（下载于<a href="https://xclient.info" target="_blank" rel="noopener">Xclient.info</a>），突然无法打开了。登陆Xclient发现有公告”关于近期部分“TNT”和谐版软件打不开的问题，请参考<a href="https://xclient.info/a/e66ab41a-62a9-cbe6-656c-f818044cd738.html" target="_blank" rel="noopener">《修复TNT和谐软件闪退问题》</a>，或等待新的版本”。具体内容如下，照做即可解决。</p><p>因为Apple苹果公司删除了TNT的证书，所以在2019年7月12日后软件都不能运行了，临时的解决办法，就是自己签名，具体往下看。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>安装xcode<br>安装xCode，你可以在App Store中下载安装，并且至少运行一次。</li><li><p>安装Command Line Tools 工具<br>打开终端工具输入如下命令：</p><figure class="highlight ada hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-<span class="hljs-keyword">select</span> <span class="hljs-comment">--install</span></span><br></pre></td></tr></table></figure><p>弹出后选择继续安装。</p></li></ol><h2 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h2><p>打开终端工具输入并执行如下命令：<br><figure class="highlight jboss-cli hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign <span class="hljs-params">--force</span> <span class="hljs-params">--deep</span> <span class="hljs-params">--sign</span> - <span class="hljs-string">/Applications/name.app</span></span><br></pre></td></tr></table></figure></p><p>注意后面的文件路径，你可以打开访达找到应用程序，找到要签名的软件，直接拖入 <code>终端</code> 界面，即可自动生成路径。</p><p>文章中分享下载的所有dmg、zip 打开密码均为 <strong>xclient.info</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;macOS系统下安装的破解软件如Downie，permute等以前可以正常使用的软件（下载于&lt;a href=&quot;https://xclient.info&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Xclient.info&lt;/a&gt;），突然无法打开了。登陆X
      
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="macOS" scheme="https://mengfeimu.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>美国地区划分</title>
    <link href="https://mengfeimu.github.io/2019/07/02/%E7%BE%8E%E5%9B%BD%E5%9C%B0%E5%8C%BA%E5%88%92%E5%88%86/"/>
    <id>https://mengfeimu.github.io/2019/07/02/美国地区划分/</id>
    <published>2019-07-02T11:42:22.000Z</published>
    <updated>2019-07-02T03:14:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>按照不同标准，有不同的划分方法，详见：<a href="https://en.wikipedia.org/wiki/List_of_regions_of_the_United_States" target="_blank" rel="noopener">List of regions of the United States</a></p><p>按照人口普查局的划分，美国可划分为4大部分。</p><p>共有八个大区，若干小区，如图：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/f/f1/Census_Regions_and_Division_of_the_United_States.svg" alt="NERC Regions"></p><p><a href="https://en.wikipedia.org/wiki/File:Census_Regions_and_Division_of_the_United_States.svg" target="_blank" rel="noopener">图片wiki链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按照不同标准，有不同的划分方法，详见：&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_regions_of_the_United_States&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;List of re
      
    
    </summary>
    
      <category term="Data" scheme="https://mengfeimu.github.io/categories/Data/"/>
    
    
  </entry>
  
  <entry>
    <title>MathType7安装和激活</title>
    <link href="https://mengfeimu.github.io/2019/07/02/mathtype7/"/>
    <id>https://mengfeimu.github.io/2019/07/02/mathtype7/</id>
    <published>2019-07-01T17:03:30.000Z</published>
    <updated>2019-08-06T08:35:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Word软件中自带的公式编辑功能已经很强大，平时写论文报告都够用，但在VISIO中画流程图时，没有比较方便的方法，于是安装MathType。</p><p>该软件收费，需要用秘钥激活，否则只能用30天使用版本。</p><p>下载MathType 7到<code>OneDrive\apps\MathType7.4.0.453</code>下，有可移动版本，无需安装和激活，直接双击<code>portable</code>文件夹下的<code>.exe</code>即可开使用（如果不成功，请先断网然后重新打开）。</p><h1 id="下载和安装："><a href="#下载和安装：" class="headerlink" title="下载和安装："></a>下载和安装：</h1><p><a href="https://cygwin.com/" target="_blank" rel="noopener">https://cygwin.com/</a>，仅仅安装了最基础的packages，vim等没有安装。</p><h1 id="安装需要的package"><a href="#安装需要的package" class="headerlink" title="安装需要的package"></a>安装需要的package</h1><p>重新运行cygwin的安装文件，选择相应的package。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Word软件中自带的公式编辑功能已经很强大，平时写论文报告都够用，但在VISIO中画流程图时，没有比较方便的方法，于是安装MathType。&lt;/p&gt;
&lt;p&gt;该软件收费，需要用秘钥激活，否则只能用30天使用版本。&lt;/p&gt;
&lt;p&gt;下载MathType 7到&lt;code&gt;OneDr
      
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="WIN" scheme="https://mengfeimu.github.io/tags/WIN/"/>
    
  </entry>
  
  <entry>
    <title>Office无法激活</title>
    <link href="https://mengfeimu.github.io/2019/06/17/office%E6%97%A0%E6%B3%95%E6%BF%80%E6%B4%BB/"/>
    <id>https://mengfeimu.github.io/2019/06/17/office无法激活/</id>
    <published>2019-06-17T15:03:42.000Z</published>
    <updated>2019-06-17T07:08:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>macOS版本的Office 365，明明已经登录账号且已经购买Office 365，但却提示需要激活，否则无法编辑word文档只能浏览。关闭word，重启，没用。重启电脑，没用。</p><p>解决办法如下：</p><ol><li><a href="https://support.office.com/en-us/article/how-to-remove-office-license-files-on-a-mac-b032c0f6-a431-4dad-83a9-6b727c03b193" target="_blank" rel="noopener">下载 license移除工具</a></li><li>安装</li><li>重新打开word，并登陆账户。</li><li>完成。</li></ol><p><a href="https://answers.microsoft.com/en-us/msoffice/forum/all/help-with-error-code/62b3b278-f57a-4387-a7ba-b444474882ec" target="_blank" rel="noopener">参考链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;macOS版本的Office 365，明明已经登录账号且已经购买Office 365，但却提示需要激活，否则无法编辑word文档只能浏览。关闭word，重启，没用。重启电脑，没用。&lt;/p&gt;
&lt;p&gt;解决办法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://s
      
    
    </summary>
    
    
      <category term="macOS" scheme="https://mengfeimu.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>免费音乐网站</title>
    <link href="https://mengfeimu.github.io/2019/06/13/music/%E5%85%8D%E8%B4%B9%E9%9F%B3%E4%B9%90%E7%BD%91%E7%AB%99/"/>
    <id>https://mengfeimu.github.io/2019/06/13/music/免费音乐网站/</id>
    <published>2019-06-12T17:32:15.000Z</published>
    <updated>2019-06-14T13:35:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在线收听"><a href="#在线收听" class="headerlink" title="在线收听"></a>在线收听</h1><p><a href="https://music.youtube.com" target="_blank" rel="noopener">https://music.youtube.com</a></p><p><a href="https://muxiv.net" target="_blank" rel="noopener">https://muxiv.net</a> （这个好像是网易云音乐的镜像网站，但网易云中需要VIP才能听的歌这个也可以免费听。）</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://ifxd.bid" target="_blank" rel="noopener">iTunes分享店</a></p><p><a href="http://its-download-thing.blogspot.com" target="_blank" rel="noopener">http://its-download-thing.blogspot.com</a></p><p><a href="http://retroitunesplus.blogspot.com" target="_blank" rel="noopener">http://retroitunesplus.blogspot.com</a></p><p><a href="http://www.baiduonce.com/index.html" target="_blank" rel="noopener">http://www.baiduonce.com/index.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在线收听&quot;&gt;&lt;a href=&quot;#在线收听&quot; class=&quot;headerlink&quot; title=&quot;在线收听&quot;&gt;&lt;/a&gt;在线收听&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://music.youtube.com&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
      <category term="音乐" scheme="https://mengfeimu.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Scihub可用链接</title>
    <link href="https://mengfeimu.github.io/2019/06/07/scihub-links/"/>
    <id>https://mengfeimu.github.io/2019/06/07/scihub-links/</id>
    <published>2019-06-06T17:20:42.000Z</published>
    <updated>2019-06-06T09:24:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>有些数据库单位没有购买，无从下载，不得已从scihub上下载，但很多域名经常被封。以下是目前可用的域名（有可能需要用VPN）：</p><p><a href="https://sci-hub.se/" target="_blank" rel="noopener">https://sci-hub.se/</a></p><p><a href="https://sci-hub.tw/" target="_blank" rel="noopener">https://sci-hub.tw/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有些数据库单位没有购买，无从下载，不得已从scihub上下载，但很多域名经常被封。以下是目前可用的域名（有可能需要用VPN）：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://sci-hub.se/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python环境搭建</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-01-20-python/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-01-20-python/</id>
    <published>2019-06-06T09:54:53.000Z</published>
    <updated>2019-04-16T01:27:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装省心的Anaconda"><a href="#安装省心的Anaconda" class="headerlink" title="安装省心的Anaconda"></a>安装省心的Anaconda</h1><p>最简单的安装方法是，直接下载exe安装Anaconda，则安装完成后即有了Jupyter，无需重新安装。</p><p>不过，还是建议安装<a href="https://conda.io/miniconda.html" target="_blank" rel="noopener">miniconda</a>，所需空间小，后续需要什么再用conda命令安装，也很方便。</p><p>接着安装Jupyter Notebook:</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter</span><br></pre></td></tr></table></figure><p>以上，就基本搭建了一个基础版本的python。</p><h1 id="安装Jupyter插件"><a href="#安装Jupyter插件" class="headerlink" title="安装Jupyter插件"></a>安装Jupyter插件</h1><p>Jupyter Notebook的cell和代码过多时，上下翻页很不方便，浪费时间，因此想要安装插件实现目录的功能，找到了<a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">jupyter_contrib_nbextensions</a>，安装过程很方便：</p><p>提前关掉正在运行的jupyter notebook。</p><p>以管理员身份打开conda命令行，安装：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span><br></pre></td></tr></table></figure><p>然后，再重新打开jupyter notebook，菜单栏即多了Nbextensions一项，选择需要的插件功能即可，比如目录。</p><p>一些建议打开的插件：</p><ul><li><p>目录 Table of Contents</p></li><li><p>代码美化 Code prettify</p></li><li><p>代码折叠 Codefolding</p></li><li><p>通知 Notify</p><p>运行完毕后会弹出窗口提示notebook处于空闲状态。</p></li></ul><h1 id="创建新conda环境"><a href="#创建新conda环境" class="headerlink" title="创建新conda环境"></a>创建新conda环境</h1><p>最好不要在<code>base</code>环境下安装各种包，以免包之间有冲突，尤其是python2和python3，影响运行。为每个项目创建一个新环境，并制定包的版本号：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n water-energy</span><br></pre></td></tr></table></figure><p><del>默认的env目录是<code>~\.conda</code>，若要指定目录，则需添加<code>--prefix</code>：</del></p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --prefix C:<span class="hljs-symbol">\P</span>rogramData<span class="hljs-symbol">\M</span>iniconda3<span class="hljs-symbol">\e</span>nvs<span class="hljs-symbol">\w</span>ater-energy</span><br></pre></td></tr></table></figure><p>在现在笔记本安装的env默认目录是<code>C:\ProgramData\Miniconda3\envs</code>，不用更改即可。</p><p><strong>如何将envs数据自动备份或同步？</strong></p><h2 id="condarc-conda-configure-file"><a href="#condarc-conda-configure-file" class="headerlink" title=".condarc conda configure file"></a><code>.condarc</code> conda configure file</h2><p>默认该文件是没有的，第一次在conda窗口执行<code>conda config</code>时便会在home directory下自动创建。在该文件中添加设置，如每次创建新env时自动安装的包等。</p><h2 id="导出当前环境的各种设置"><a href="#导出当前环境的各种设置" class="headerlink" title="导出当前环境的各种设置"></a>导出当前环境的各种设置</h2><figure class="highlight routeros hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="hljs-builtin-name">export</span> &gt; base_env.yml</span><br></pre></td></tr></table></figure><p>然后，将<code>base_env.yml</code>复制到另一台计算机（win和macOS不通用；需要在yml文件中删除含有nbextensions的项目[搜索nb]，否则会报错，nbextensions需要单独安装）中，并根据该文件来创建env：</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">conda</span> <span class="hljs-selector-tag">env</span> <span class="hljs-selector-tag">create</span> <span class="hljs-selector-tag">-f</span> <span class="hljs-selector-tag">base_env</span><span class="hljs-selector-class">.yml</span></span><br></pre></td></tr></table></figure><p>激活环境：</p><figure class="highlight applescript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="hljs-built_in">activate</span> env_name</span><br></pre></td></tr></table></figure><p>退出环境：</p><figure class="highlight ebnf hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">conda deactivate</span></span><br></pre></td></tr></table></figure><h2 id="查看env列表"><a href="#查看env列表" class="headerlink" title="查看env列表"></a>查看env列表</h2><figure class="highlight applescript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="hljs-built_in">list</span></span><br></pre></td></tr></table></figure><h2 id="删除某一环境"><a href="#删除某一环境" class="headerlink" title="删除某一环境"></a>删除某一环境</h2><figure class="highlight lua hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="hljs-built_in">remove</span> <span class="hljs-comment">--name env_name</span></span><br></pre></td></tr></table></figure><h1 id="改变anaconda-prompt窗口启动的默认目录位置和默认环境env"><a href="#改变anaconda-prompt窗口启动的默认目录位置和默认环境env" class="headerlink" title="改变anaconda prompt窗口启动的默认目录位置和默认环境env"></a>改变<code>anaconda prompt</code>窗口启动的默认目录位置和默认环境env</h1><ul><li><p>目录位置：右键<code>anaconda prompt</code>，属性，起始位置（写上想要默认开启的目录位置）</p></li><li><p>默认env: 一般默认的env是<code>base</code>，右键<code>anaconda prompt</code>属性中的目标为<code>%windir%\System32\cmd.exe &quot;/K&quot; C:\ProgramData\Miniconda3\Scripts\activate.bat C:\ProgramData\Miniconda3</code></p><p>把最后的目录<code>C:\ProgramData\Miniconda3</code>替换为想要启动的目录位置（一般在<code>.\Miniconda3\envs\your_env_name</code>中），比如<code>C:\ProgramData\Miniconda3\envs\water-energy</code></p><blockquote><p>难道没有anaconda命令可以完成这件事吗？</p></blockquote></li></ul><h1 id="常用的packages"><a href="#常用的packages" class="headerlink" title="常用的packages"></a>常用的packages</h1><ul><li><p>pandas: 与csv, txt, excel等格式数据交互的包。</p></li><li><p>numpy: 数组处理与计算</p></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      python编程相关命令记录
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Anaconda" scheme="https://mengfeimu.github.io/tags/Anaconda/"/>
    
      <category term="python" scheme="https://mengfeimu.github.io/tags/python/"/>
    
      <category term="Jupyter" scheme="https://mengfeimu.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Python之pandas</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-06-14-python-pandas/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-06-14-python-pandas/</id>
    <published>2019-06-06T09:54:53.000Z</published>
    <updated>2019-03-15T04:45:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>  参照<a href="https://mengfeimu.github.io/2018/01/20/python/#3-%E5%AE%89%E8%A3%85pandas">python环境搭建</a></p><h1 id="读取csv文件"><a href="#读取csv文件" class="headerlink" title="读取csv文件"></a>读取csv文件</h1>  <figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd</span><br><span class="line"><span class="hljs-comment"># delimiter = 设置间隔符</span></span><br><span class="line"><span class="hljs-comment"># names = 设置列名，适用于文件中没有列名直接是数据的情况，如果文件中已有列名，names = None</span></span><br><span class="line">cols = [<span class="hljs-string">'id'</span>, <span class="hljs-string">'lat'</span>, <span class="hljs-string">'lon'</span>, <span class="hljs-string">'vars'</span>, <span class="hljs-string">'firstY'</span>, <span class="hljs-string">'lastY'</span>]</span><br><span class="line">df   = pd.read_csv(inven_f, names=cols, delimiter=<span class="hljs-string">'\s+'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 选取某一列或某几列</span></span><br><span class="line">df[<span class="hljs-string">'vars'</span>]</span><br><span class="line">df[[<span class="hljs-string">'id'</span>, <span class="hljs-string">'vars'</span>]]</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 按某一列排序</span></span><br><span class="line">df.sort_values(by = <span class="hljs-string">'var'</span>, ascending=<span class="hljs-keyword">True</span>) <span class="hljs-comment"># 升序</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 按条件筛选</span></span><br><span class="line">df[df.lat &gt; <span class="hljs-number">60</span>]</span><br><span class="line">df[df[<span class="hljs-string">'lat'</span>] &gt; <span class="hljs-number">60</span>]</span><br><span class="line">df[df[<span class="hljs-string">'vars'</span>] == <span class="hljs-string">'TMAX'</span>]</span><br><span class="line"><span class="hljs-comment"># df[df.var == 'TMAX'] # 错误用法, 原因是var是pandas的保留字段，不要用var作为列名，改为vars之后就可以了</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 多条件筛选 isin()</span></span><br><span class="line"><span class="hljs-comment"># 'vars' == 列表中之一</span></span><br><span class="line">df[df.vars.isin([<span class="hljs-string">'ACMC'</span>,<span class="hljs-string">'ACMH'</span>,<span class="hljs-string">'ACSC'</span>,<span class="hljs-string">'ACSH'</span>])]</span><br><span class="line">df[df[<span class="hljs-string">'vars'</span>].isin([<span class="hljs-string">'ACMC'</span>,<span class="hljs-string">'ACMH'</span>,<span class="hljs-string">'ACSC'</span>,<span class="hljs-string">'ACSH'</span>])]</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 筛选某列中包含某个字符片段的行</span></span><br><span class="line">df[df.id.str.contains(<span class="hljs-string">'US'</span>)]</span><br><span class="line"><span class="hljs-comment">## 以某个字符片段开头的行</span></span><br><span class="line">df[df.id.str.startswith(<span class="hljs-string">'US'</span>)]</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看不重复的值</span></span><br><span class="line">sorted(df.vars.unique())</span><br></pre></td></tr></table></figure><h1 id="resample-和-groupby"><a href="#resample-和-groupby" class="headerlink" title="resample 和 groupby"></a>resample 和 groupby</h1><p>小时数据求日平均值，即数据重采样，用<code>resample</code>：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.resample(<span class="hljs-string">'D'</span>).mean().plot()</span><br><span class="line"><span class="hljs-comment"># 若需要求月平均值，则用'M'，年平均值，用'Y'，三小时平均值'3H'。</span></span><br></pre></td></tr></table></figure><p><img src="/pics/pandas_resample.png" alt="pandas_resample.png"></p><p>求多年月平均值，则需要用groupby：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 = df.groupby(by=df.index.month).mean().plot()</span><br></pre></td></tr></table></figure><p><img src="/pics/pandas_groupby.png" alt="pandas_groupby.png"></p><p>从这张两图即可看出resample和groupby的区别。</p>]]></content>
    
    <summary type="html">
    
      python pandas
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="python" scheme="https://mengfeimu.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Git工具安装与使用</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-07-27-git/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-07-27-git/</id>
    <published>2019-06-06T09:54:53.000Z</published>
    <updated>2018-10-10T17:12:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装git工具"><a href="#安装git工具" class="headerlink" title="安装git工具"></a>安装git工具</h1><p><a href="https://www.git-scm.com/downloads" target="_blank" rel="noopener">下载安装</a>，一路选择默认。</p><ol><li><p>设置本地ssh</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="hljs-string">"mengfeimu@qq.com"</span></span><br><span class="line"><span class="hljs-comment"># enter file in which to save the key</span></span><br><span class="line"><span class="hljs-comment"># 保持默认，点回车键</span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>Github网站上添加SSH-KEY：</p><p>复制<code>~/.ssh/id_rsa.pub</code>中的所有内容，</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa .......... mengfeimu@qq.com</span><br></pre></td></tr></table></figure><p><code>Github -&gt; Settings -&gt; SSH and GPG Keys -&gt; New SSH key</code></p></li><li><p>验证是否配置成功：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="hljs-comment"># 输入yes</span></span><br><span class="line"><span class="hljs-comment"># 若成功，则出现以下提示：</span></span><br><span class="line"><span class="hljs-comment"># Hi mengfeimu! You've successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></li><li><p>配置本地用户名和邮箱</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 与github.com上的信息保持一致</span></span><br><span class="line">git config --global user.name <span class="hljs-string">"mengfeimu"</span></span><br><span class="line">git config --global user.email <span class="hljs-string">"mengfeimu@qq.com"</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="新建一个项目并上传到github"><a href="#新建一个项目并上传到github" class="headerlink" title="新建一个项目并上传到github"></a>新建一个项目并上传到github</h1><p>打开github.com，创建一个新库，命名，不要勾选ReadME.md和任何license，然后在新的网页上会出现提示。在电脑本地目录中找到pyhspf的安装目录，然后在git bash工具中进入，执行操作：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="hljs-string">"first commit"</span></span><br><span class="line">git remote add origin git@github.com:mengfeimu/pyhspf_backup.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h1 id="clone已有Github项目到本地："><a href="#clone已有Github项目到本地：" class="headerlink" title="clone已有Github项目到本地："></a>clone已有Github项目到本地：</h1><ol><li><p>打开git bash，切换到目标目录</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:mengfeimu/test.git .</span><br></pre></td></tr></table></figure></li><li><p>设置打开git bash时的默认工作路径：</p><p>点击git bash的图标 -&gt;properties -&gt; start in -&gt; C:\ProgramData\Miniconda3\Lib\site-packages\pyhspf</p></li></ol><h1 id="push-and-pull"><a href="#push-and-pull" class="headerlink" title="push and pull"></a>push and pull</h1><ol><li><p>push 将本地的更改提交至GitHub</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="hljs-string">"add some comments"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li><li><p>pull: 将GitHub远程更改提回本地</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      git工具安装与使用
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://mengfeimu.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Windows装机软件</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-07-13-windows%E8%A3%85%E6%9C%BA/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-07-13-windows装机/</id>
    <published>2019-06-06T09:54:52.000Z</published>
    <updated>2019-04-23T03:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a><a href="https://www.google.com/chrome/" target="_blank" rel="noopener">Chrome</a></h1><p>登陆账户<a href="mailto:mengfeimu2020@gmail.com" target="_blank" rel="noopener">mengfeimu2020@gmail.com</a></p><p>WIN10中设置为默认浏览器：Settings -&gt; Browser -&gt; Chrome</p><h1 id="7-zip-pyhspf需要-："><a href="#7-zip-pyhspf需要-：" class="headerlink" title="7-zip (pyhspf需要)："></a><a href="https://www.7-zip.org" target="_blank" rel="noopener">7-zip</a> (pyhspf需要)：</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\7-Zip</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="BASINS-pyhspf-需要-："><a href="#BASINS-pyhspf-需要-：" class="headerlink" title="BASINS (pyhspf 需要)："></a><a href="https://www.epa.gov/ceam/basins-download-and-installation" target="_blank" rel="noopener">BASINS</a> (pyhspf 需要)：</h1>   <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\BASINS41</span><br></pre></td></tr></table></figure><h1 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a><a href="https://www.voidtools.com" target="_blank" rel="noopener">Everything</a></h1><p>设置快捷键，快速启动窗口：Tools -&gt; Options -&gt; keyboard -&gt; show window key -&gt; Ctrl + Enter。</p><h1 id="GitHub-Desktop"><a href="#GitHub-Desktop" class="headerlink" title="GitHub Desktop"></a><a href="https://desktop.github.com/" target="_blank" rel="noopener">GitHub Desktop</a></h1><p>登陆<a href="mailto:mengfeimu@qq.com" target="_blank" rel="noopener">mengfeimu@qq.com</a>账户即可</p><h1 id="Git-bash"><a href="#Git-bash" class="headerlink" title="Git bash"></a><a href="https://www.git-scm.com/downloads" target="_blank" rel="noopener">Git bash</a></h1><p>参考<a href="https://mengfeimu.github.io/2018/07/27/tool/2018-07-27-git/">git工具安装与使用</a></p><h1 id="Anaconda-for-python"><a href="#Anaconda-for-python" class="headerlink" title="Anaconda for python"></a>Anaconda for python</h1><p>参考<a href="https://mengfeimu.github.io/2018/07/16/tool/2018-01-20-python/">python环境搭建一文</a>安装完成Anaconda后，安装pyhspf，并将github自己的pyhspf代码同步到安装文件夹</p><ol><li><p>以管理员身份打开anaconda prompt:</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyhspf</span><br></pre></td></tr></table></figure><p> 通过<code>pip install pyhspf</code>安装pyhspf过程中，遇到如下错误：</p> <figure class="highlight cal hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: <span class="hljs-string">'&gt;='</span> <span class="hljs-keyword">not</span> supported between instances <span class="hljs-keyword">of</span> <span class="hljs-string">'NoneType'</span> <span class="hljs-keyword">and</span> <span class="hljs-string">'str'</span></span><br></pre></td></tr></table></figure><p> 解决如下：</p> <figure class="highlight cmake hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="hljs-keyword">install</span> -c anaconda mingw</span><br></pre></td></tr></table></figure></li><li><p>安装pyhspf需要的包，</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># No module named 'shapefile'</span></span><br><span class="line">conda install pyshp</span><br><span class="line"><span class="hljs-comment"># No module named 'gdal'</span></span><br><span class="line"><span class="hljs-comment"># 需单独下载gdal whl文件，参照https://mengfeimu.github.io/2018/04/17/gdal-error/</span></span><br><span class="line">pip install C:\Users\mengfei\Downloads\GDAL-2.2.4-cp36-cp36m-win_amd64.whl</span><br><span class="line"><span class="hljs-comment"># 相同方法安装pillow</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># pyomo and ipopt, MAS model 需要</span></span><br><span class="line">conda install -c conda-forge pyomo</span><br><span class="line">conda install -c conda-forge ipopt</span><br></pre></td></tr></table></figure></li><li><p>复制整个文件夹，保存到桌面或其他方便位置，文件夹命名为pyhspf_install，然后删除掉该文件夹：</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Miniconda3\Lib\site-packages\pyhspf</span><br></pre></td></tr></table></figure></li><li><p>在github中打开pyhspf_backup项目，删除掉每个文件夹中的ini.py和__pycache文件夹</p></li><li><p>打开git bash:</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 切换目录</span></span><br><span class="line"><span class="hljs-built_in">cd</span> /c/ProgramData/Miniconda3/Lib/site-packages/</span><br><span class="line"><span class="hljs-comment"># clone github repo to local, named as pyhspf</span></span><br><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:mengfeimu/pyhspf_backup.git pyhspf</span><br></pre></td></tr></table></figure></li><li><p>复制桌面文件夹pyhspf_install中的所有内容，并重新粘贴到C:\ProgramData\Miniconda3\Lib\site-packages\pyhspf，跳过已经存在的所有文件</p></li><li><p>运行Data\water_energy\codetest.ipynb，检验pyhspf是否安装成功</p></li></ol><h1 id="Zotero-文献管理"><a href="#Zotero-文献管理" class="headerlink" title="Zotero: 文献管理"></a><a href="https://www.zotero.org" target="_blank" rel="noopener">Zotero</a>: 文献管理</h1><p><a href="mailto:mengfeimu@qq.com" target="_blank" rel="noopener">mengfeimu@qq.com</a></p><ol><li><p>登陆后记得不要同步PDF附件，否则免费空间很快就被用完了。</p><p>设置不要保存文件和snapshots到zotero默认目录，只保存metadata：</p><figure class="highlight xl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E<span class="hljs-function"><span class="hljs-title">dit</span> -&gt;</span> P<span class="hljs-function"><span class="hljs-title">references</span> -&gt;</span> F<span class="hljs-function"><span class="hljs-title">ile</span> Handling --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>可以设置PDF文件存储的相对路径，这样只要两台电脑上的相对路径内的文件结构、文件名不变，就可以同步，直接在Zotero条目双击就可以打开相应的文献PDF文件。</p><figure class="highlight xl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A<span class="hljs-function"><span class="hljs-title">dvanced</span> -&gt;</span> F<span class="hljs-function"><span class="hljs-title">iles</span> <span class="hljs-built_in">and</span> Folders -&gt;</span> C<span class="hljs-function"><span class="hljs-title">hoose</span> (base directory) -&gt;</span> 选择对应的路径</span><br></pre></td></tr></table></figure><p>注意：在链接文件时不要将PDF文件拖到Zotero里，否则会在Zotero内复制一份PDF，两台电脑同步也会有问题，而要点击<code>Add link to File</code>。</p></li></ol><h1 id="Notepad-：代码阅读与修改"><a href="#Notepad-：代码阅读与修改" class="headerlink" title="Notepad++：代码阅读与修改"></a><a href="https://notepad-plus-plus.org/download/v7.5.7.html" target="_blank" rel="noopener">Notepad++</a>：代码阅读与修改</h1><p>设置Tab键=4space: preferences-&gt;Language-&gt;Replace by space</p><p>每次打开Notepad++时以管理员身份打开，确保有写入权限</p><h1 id="Sublime-Text-代码阅读与修改"><a href="#Sublime-Text-代码阅读与修改" class="headerlink" title="Sublime Text: 代码阅读与修改"></a><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a>: 代码阅读与修改</h1><p>Notepad++对python函数列表的支持不是很好。弃用，改用sublime。</p><ol><li><p>安装package control: <a href="https://packagecontrol.io/installation#st3" target="_blank" rel="noopener">https://packagecontrol.io/installation#st3</a></p></li><li><p>打开preferences -&gt; package control，或者Ctrl+Shift+P，输入install，选择第一项install package，输入想要安装的anaconda</p><ol><li><p>设置python路径</p><p>windows下查看在jupyter notebook中输入</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> sys</span><br><span class="line">print(sys.executable)</span><br><span class="line"><span class="hljs-comment"># 输出结果即为python的路径</span></span><br></pre></td></tr></table></figure><p>macOS下查看python路径，在terminal中输入：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">which</span> python</span><br></pre></td></tr></table></figure></li></ol></li></ol><pre><code>打开preferences -&gt; Package settings -&gt; Anaconda -&gt; settings-default，找到&quot;python_interpreter&quot;，将路径替换为python路径</code></pre><ol start="3"><li><p>第一次使用sublime时设置git同步：</p></li><li><p>同步github项目<a href="https://github.com/mengfeimu/sublimeText3_packages" target="_blank" rel="noopener">sublimeText3_packages</a>到本地sublime的数据目录（查看目录：preferences -&gt; browsing packages）</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> local_dir</span><br><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:mengfeimu/sublimeText3_packages.git .</span><br></pre></td></tr></table></figure></li><li><p>重新打开sublime即可，自动依次下载以前安装过的packages。</p><ol><li>需要重新设置Anaconda packages中的python路径。</li></ol></li></ol><h1 id="Typora-for-Markdown"><a href="#Typora-for-Markdown" class="headerlink" title="Typora for Markdown"></a><a href="https://www.typora.io" target="_blank" rel="noopener">Typora</a> for Markdown</h1><h1 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h1><h1 id="ArcGIS"><a href="#ArcGIS" class="headerlink" title="ArcGIS"></a>ArcGIS</h1><h1 id="Dropbox"><a href="#Dropbox" class="headerlink" title="Dropbox"></a><a href="https://db.tt/k2ukapmilJ" target="_blank" rel="noopener">Dropbox</a></h1><p>Google账户登陆</p><h1 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a><a href="https://www.teamviewer.us" target="_blank" rel="noopener">TeamViewer</a></h1><p>远程登录并控制桌面。个人版免费使用。</p><h1 id="Foxmail"><a href="#Foxmail" class="headerlink" title="Foxmail"></a>Foxmail</h1><p>将备份文件中的Foxmail从文件夹中拷贝到电脑中，直接打开即可。</p><h1 id="Snipaste-截图"><a href="#Snipaste-截图" class="headerlink" title="Snipaste 截图"></a><a href="https://zh.snipaste.com/" target="_blank" rel="noopener">Snipaste</a> 截图</h1><p>portable，免安装。直接打开exe即可。F1截图，F3查看。</p><h1 id="WIN10设置文件后缀名可见："><a href="#WIN10设置文件后缀名可见：" class="headerlink" title="WIN10设置文件后缀名可见："></a>WIN10设置文件后缀名可见：</h1><p>Explorer -&gt; View -&gt; File name extensions</p>]]></content>
    
    <summary type="html">
    
      WIN重装后需要安装的软件
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="WIN" scheme="https://mengfeimu.github.io/tags/WIN/"/>
    
  </entry>
  
  <entry>
    <title>Chm转换pdf</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-04-23-chm2pdf/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-04-23-chm2pdf/</id>
    <published>2019-06-06T09:54:52.000Z</published>
    <updated>2018-07-16T19:20:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用这个网站（优先用这一个！）：</p><p><a href="https://www.freefileconvert.com/" target="_blank" rel="noopener">https://www.freefileconvert.com/</a></p><p>或者这个 (有转换不完整的现象)：</p><p><a href="https://cloudconvert.com/chm-to-pdf" target="_blank" rel="noopener">https://cloudconvert.com/chm-to-pdf</a></p><p>亲测都可用，10M文件转换需要几分钟，比较慢，耐心等待。</p>]]></content>
    
    <summary type="html">
    
      convert chm to pdf
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="pdf" scheme="https://mengfeimu.github.io/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>Sed &amp; Awk Commands</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2016-12-30-sedAwkUnixCommand/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2016-12-30-sedAwkUnixCommand/</id>
    <published>2019-06-06T09:54:52.000Z</published>
    <updated>2018-07-16T19:20:01.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>content<br>{:toc}</li></ul><p><em>Sed and Awk are two powerful tools to manipulate text formatted files on Unix/Linux.<br>This is not a tutorial but some real codes applied in my research.<br>For basic introduction and syntax, please go to<br><a href="https://www.tutorialspoint.com/sed/" target="_blank" rel="noopener">Sed</a> or<br><a href="https://www.tutorialspoint.com/awk/" target="_blank" rel="noopener">Awk</a>.</em> </p><h2 id="1-Use-Shell-variables-in-Sed"><a href="#1-Use-Shell-variables-in-Sed" class="headerlink" title="1. Use Shell variables in Sed"></a>1. Use Shell variables in Sed</h2><p>The following command lines insert a string before the first line of file temp.txt:<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="hljs-string">'1i I want to insert a string into file temp.txt'</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">but when you want to insert a longer sentence, or you want to <span class="hljs-built_in">read</span> some lines from another file, store them <span class="hljs-keyword">in</span> a Shell variable, and <span class="hljs-keyword">then</span> insert them into the targeted file, the following commands really <span class="hljs-built_in">help</span>:</span><br><span class="line">```bash</span><br><span class="line">resids=<span class="hljs-string">"I want to insert a longer sentence, more and more...."</span></span><br><span class="line">sed <span class="hljs-string">"1i <span class="hljs-variable">$&#123;resids&#125;</span>"</span> temp.txt |less</span><br></pre></td></tr></table></figure></p><p>NOTE: must use double quotes when you want to use shell variables.</p><h2 id="2-Overlap-problem-when-appending-a-string-to-a-shell-variable-passed-from-awk-output"><a href="#2-Overlap-problem-when-appending-a-string-to-a-shell-variable-passed-from-awk-output" class="headerlink" title="2. Overlap problem when appending a string to a shell variable passed from awk output"></a>2. Overlap problem when appending a string to a shell variable passed from awk output</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=$(awk <span class="hljs-string">'&#123;print $2&#125;'</span> name.txt)</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$name</span></span><br></pre></td></tr></table></figure><p>the output will be:<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wbksesco</span><br></pre></td></tr></table></figure></p><p>the output sees strange. Actually, there is a <code>\r</code> in each line making this strange thing happen. The solution is to use <code>sed</code> to replace <code>\r</code>:<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=$(awk <span class="hljs-string">'&#123;print $2&#125;'</span> name.txt |sed <span class="hljs-string">'s/\r//g)</span></span><br><span class="line"><span class="hljs-string">echo $name</span></span><br></pre></td></tr></table></figure></p><p>the right output will be:<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">agr alcr altus ancr arbuck arne bbne bbr bfr bhr blr bonc boyr cane carterco cbks ccdt ccr cheney cmo cobb dane dfr eapr edne foss frr gibr gler graresco greresco guwy hbne hcne hebr hgh hsne htoothr hvr jamr jmrcadco keyr ksks kwks ler lfrm limr lmne ltr lvks mcdh mrne nasty nelr norman patr pbr pist pshr ptr puer rueresco sanford semr sharesco sher shr swtr toms trgt trne turq twiresco waks wbks</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;content&lt;br&gt;{:toc}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Sed and Awk are two powerful tools to manipulate text formatted files on Unix/Linux.&lt;br&gt;This is
      
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Awk" scheme="https://mengfeimu.github.io/tags/Awk/"/>
    
      <category term="Sed" scheme="https://mengfeimu.github.io/tags/Sed/"/>
    
      <category term="Shell" scheme="https://mengfeimu.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>免费无限容量的照片备份与管理:Google Photos</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-05-12-GooglePhotos/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-05-12-GooglePhotos/</id>
    <published>2019-06-06T09:54:52.000Z</published>
    <updated>2018-07-16T19:20:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>这两天Google I/O大会，看到了关于Google Photos的新闻，好像是以前就有的产品，现在更加强大。最大的卖点就是可以无限备份手机或者电脑上的照片和视频，只要你能接受最大清晰度16MP以下，也就是说几乎所有的手机拍的都可以在损失一点点清晰度的情况下上传到这里，而且是免费的、无限容量的。知乎上有很多关于安全性的讨论。对于我来讲，应该会把非私人的照片、风景照等放在上面，反正是无关紧要的东西，个人照片还是要单独本地备份的。</p><p>突然想到还可以用这家伙来做一个免费的图床，插入到博客链接中，在电脑上看清晰度很可以。</p><ul><li><p>测试Google Photos图床功能（用iPhone 8 Plus拍摄 20180425）</p><p><img src="https://lh3.googleusercontent.com/xWTz0QdPjgh5ifyQxWP2Q-XKiGOjBz_-AWE9AB7XGr0wZVXjVrBchzdjbfcWASJnQ_Reayio2Y8IyrA19sXx25cJvebbixdoB9tTaXdAOxMQWUS06uXcaQ6FFD7BmTR01x8-FS8WXvEjMzUJ2ycLvb5LrPiOPnQ4lYCakqcseNe4Ik1g0xnuurKnhsrEsg0Z0K0GIki-neJlhpAWTi1_knOvZ4v8jE076047RID1W615lIISIBFfD85XBbmbo-QhC4H4vPlqYsQmJur2yXA62YueCBq7FIE6Aterb1gwdYEduafJXQ1EI_8HwOg6io79pA-ZnbTIGvzgtaFXaniU-XIrGL6BKqfGaGnYAlntDlwTqljLoM0D2ny-pYquU47gBHVpkpg5UICT2C62S74IRg_eUjdZfEtmAudGAvnsB5LxrnMuQJjrzQcmw8y9UT4fp_wtj1a1po9y2XZFyN7dj8Mef1rusU4wSiPP5KQjZhSqVUn7nTlbnppOB5f5RsOqZEFb5bswT6EgXDEZuEtk1rERRjHDGYgLouI9PWkbSM4qZO1hrwkdV8zdf3HRhsU8haN0L8l1GoLz7pCv5Q-mce8ssfHTjtJ5FzU0T2s=w2006-h1504-no" alt="香槟体育馆"></p></li></ul><p>更让我惊喜的是，上传了照片之后，会有自动推荐的滤镜效果，比自己动手美化的效果还要好，简直是黑科技。来看看这惊艳的效果：</p><ul><li><p>原图</p><p><img src="https://lh3.googleusercontent.com/VJRt4hJPtdQKmVAItIi5uVqgv3c5FnK69z2GWLnOBxwDQ2OAuRkFyNedhwc-BiG-zJHJWuohneD4pH_ctSHJP8eT0_vdeS5i5vCVdCqZ6VbpkCQ9qOcXJx_f-KxntD15GzZxryTJaBZd46qVwEjJnMZvScr1pxx1QE2Ha0Z87E9kmrCvytpL7QIlQvGuMzzYa5scaTSFQfGZyspfHNHilAV8QC5hqphW92c7rVirA2of0vqTBCLptChqkL5yoaVxolO_uXn0UDvTN6FCc7nOKVuZwMkFMHQSl6UWUwFtm85zdquXqu2Y0fh9uHrGizXLO-lqjoceoJfGl7EVuVOhEbldVSdfFy6K-PrTZ8m9flkOqEAZjk6Ly1YyAvfbehGya5Vivm-LxZHQI9KLaWfGcJm6xv04n5J_XnguidF96qWVbbSKBzsi8sLc8Z4g5iX6Wzspcm1tFr6uRTSO9Jmo_CDYl9kWzeW0aLCmqLlOHtyNlfUFrXqRD9Z9zthxpR0JsdB2CSX630kRNSlRXkR0-NXe7drPWDzsTZSsTzoym8WFwt9sYD9oc5upaPO5NTfoF6Mtc2vszptXxgtCnJ8PRFWAdv96NwMdi0oZy7c=w2000-h1506-no" alt="新奥尔良杰克逊广场"></p><p><img src="https://lh3.googleusercontent.com/tCK82e71gJ16P2JAJ3hoVy5RU_2AJdujMR3xSsNxkkf7RSdp_8aPvr2pEsTqNE1WA4ts5dIx5PR5SHJv4sJVvDaR5zKp9sZqYMfeF_zjCGorRMXV91ThqamWDxEXzxBZwmDCh-qJV8IfeX3DdpPSsc24QZMwQJvXEvrDVCwF0hDNkRXIdSs-y_zKeTzXCwvVIjhuIkseXJR722oDUHkmWiH7ykxMhbzmMIcjHFWn9wbHS6m508PcMEwKJ0sP8lbQnSeIo6NTVqhn1saj74-opID2QuYOTD_-ETNm00brbitoX5y9AtzNjTptItU1NlMv6Uvd7ej6t5I1lE3yS1kpmW41JXwJ0-flmjlrFhVGXzn1g5TOuiWd1GafNsq2czptD406YC5zaIHdNN-dtexNx7ry5YzncRd0oKVaRCwvMyDUsbPNoFYkOn1plGGJ-_HeXSNtwocUaVKwYb5qzFhuIUliCf9zHazRVfU-Ah6jMnUyYvXOXvaE9TwTBHCY2GMAMt22DKeXtdI_-cTOzyDIn3rte93VKKWtvgMNq2k-2eX0a3z1befyynwnV0pX_4qIURjftXPSp2KZSI0snrP8Ubvr8uGOVM5hLYUHe_0=w2006-h1504-no" alt="UIUC大雪"></p><p><img src="https://lh3.googleusercontent.com/FCHoZ6fV29MtH5ZWEV0sWW3WfeATTMtKcuJVLK7JGdCMR2-SxRpocenEwFTZu5FAtFqWwepeZHhfgus61kfE9swa3LzRRpWt-12bgQnPiiA49damVyZNK-q7ooWU6FlCpAY5UhC9oRoG04m8LiIKzVydrOk9Z6ug6I84TUBwSp0dF_rtkPplXnHjxOUr_r6ngC_9Wejjfap2ph7hcKRQyajwppE6WfFLiRnnrzEz4l7XrdVxoWSB-zhfTOMOz4hUlAgB6rtY1jMJuwLwNmYtmqzG6n8EuTKZ1P0m4LBe0DTavJlxUdGfaENw_9Yc1f7KxBiPIQ90OzKy49YpHvUEuKgWXprcBO3ZklzYolYiGgTC5NdumcWBtFXl-bDrD6h4kSDP7Uzz1SAhKNsjW6B8hnS8Ge0JUpBLyU4mOYKBHmqS2ei2AdzpJvUqD7_v4csqPkmlRjmre7bK8N20P_h7ShToWLZPyNCjHI4QzVKUdgyLhgG4_ECYfTJvzuUgpKoHUdrEiiU8FVToLB-zEEw8g6nX7oPz_w3vqw3fBC6dMHBl2mJkA-v90m_O5xz3N3H3jtIl-J9K4L4JeHIZ3cA-mY6KKnjtV85CfbsU4Rk=w2006-h1504-no" alt=""></p><p>​</p></li><li><p>Google Photos自动推荐的滤镜</p><p><img src="https://lh3.googleusercontent.com/pKukXOmK9Hat_B62uFCp6hONOGWDK1K8gvvMmZdKwazM7jIaJC5sKOjXrlrXVbOL6p0Eb4nkK7kDBunNPuqAB8-_cRBRuY-cfaHiJJaASvR7bUl9Xw7IOhWgzHM2cbR-LYB_FREMHlk3gCOU50Gl9a0nWzQDZb08B-czo-8-JU-OgK4p6TuDVpe2R8BbkgjCbJcFxiMhk_GNz-XcQYILhoQwDyLxh4MFxVHnZSQhLF3tK60R84iG0poc05QaIW_KQYz9Hjc6MY3bUqybkuFomGh79uIV3mj03h5lB34uLGgSr9cgRC2-JLkimCfqfLr-E5weyOr4mcH8uwr4IdgWI4pnH9SeUzINFxqPs87MpSSSTFEmJP3gNX57BcbUEVLWuIJ9likBJ3a-U33j-TtxcGmhFIfMzivWmT-K-JgQnLCPE76c-dLnyaeLXhPVSYUBN1i2dBWkuNIN6LrpNkWZNMN6Beq4vAuf5D2X8aXmg_4JcfFMnb32l6bULN9_neRIKF9C7LKa-iGVFLAD8WK_0Zz9fg15p9iuXVJDeYylQJpJJYfBhLD2IjeGyjkL_hasQlsvChNAjZSyX7_HhRsTkcJ3BLt_jHo8C4xh8zE=w2000-h1506-no" alt="新奥尔良杰克逊广场"></p><p><img src="https://lh3.googleusercontent.com/r0GDlXvFUEyX4ZPMCBQFzj9Cwf_D2lNway0VWt5nCqOBkf4c0cK2jBvprnwTwPTe_ntFWTAXW57nJILhnRsWlDmvGQD4QGaSupW_rUuj1LVMot66qTx5GvDSLa0CzsP05s6faMnnEgRi9W92If-suNNVywCUUQGpC5v9NOvG7pVHf75v2Fd5K0VOcEwCP1Rq6W_STqzgSYKJi4NGptr7RhsL544RQ72J96AL85lvb4mVgQABFiZuWprZj8iuurY_8XR2Hx0ENzo9KDA5ylYF-bR7HzeQpGAj08HKPym8eHXIO3fD1HxGWP1XnfYWoSOGOqfCAs1BSVubjUz-FnJ73_ykFQWdPF58cj2EzPqpTDKMLA2ML4267JHTonsxAJ8RticYZ1tbn6hmVM_WWn3FZoKM7x5wvab-zTXaXoJnekvD4EsJkCc6hWVUvuwZXIvvZVFmA32XELh586bNZpwwwEhz3WqBQsTGEelqjJly_UxhGEqh2RSCPvgdHFWrNuijSPWhxeMafkiwije_MifKDt5IYuhXgtbPI9XXygjP_0YfllBED8IaAu93p30qKD8BzS18trX4HQilALJs5UCn46oFmbdn6QMZDGNKLw8=w2006-h1504-no" alt="UIUC大雪"></p><p><img src="https://lh3.googleusercontent.com/JxbP1BDjM37Gn_lAl2eJug7gOQWoI2Kxkb1Cygdz8MiXBNx5qw0frSaDCKH3W3blejlA2kIl2xUkiCaYehqafIaa94ivgWFemJu1ICEaBVpsUqktC9h0cDMOefBmP6Eggb4hxQsvvwm_vRH2PqQ-hgu8Nvhqhx0fPjQHo_lpDa4W6U9A9FArhWjXNG4oXABwKWxeJBMuPeEDCGktJpXf3QSuFcGCTm-cWQ9_lkSvddB1ab015NbG-sWVNmXt_mS729AvzTh1Byq6r1FtdalEdZllSJP0jyj4DGWnrFLcFrGsj0s1cP7VhBxEH5wKFXFcf_hnYsWh7ucFM9NA2YtqXa1mq1t129qWkKztEfXmTRMSDEIowb8AHdGkNvKj9RenfIzJAjX6eHI569gIqDmzHUGRRMu4v6gw3M-SBj7SdzGDZoQ6tEJfioRzaCRMNoMrxHysRlZWSJp7r1YmDwfZ47FLhLmOVCd6V0R8ptp1kznGmak6pXvQukarodrEddgzfSObg1t8jp3kvOxF3ayQ9FBEbzUx31j2pDlZO5FcgsVnhp-IVjyj8CVrfJSfQ_iyHbROeBRnQ6OhAIlEhv1R8dD34tA_gwW7Yz6yjvI=w2006-h1504-no" alt=""></p></li></ul><p>当然，Google Photos最厉害的还是照片管理功能，它可以提供时间线管理，自动按拍照地点进行分类，进行人脸识别，你可以直接搜索某个地点、某个人、甚至是某个东西，比如搜索“汽车”，必会得到所有含有汽车的图片。虽然这些功能其他产品也有，比如Apple家的Photos，但是谷歌这次真的是非常有诚意的整合了如此多的功能，而且还免费，是非常值得试用的一款产品。</p><p>当然，本地备份还是一直要有的。</p>]]></content>
    
    <summary type="html">
    
      免费照片备份
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Google" scheme="https://mengfeimu.github.io/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>百度网盘限速破解</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-05-07-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-05-07-百度网盘/</id>
    <published>2019-06-06T09:54:52.000Z</published>
    <updated>2018-07-16T19:20:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>百度网盘下载限速很严重，逼人付钱成为会员的节奏。Github上有个开源项目破解了macOS版本的限速：<a href="https://github.com/CodeTips/BaiduNetdiskPlugin-macOS" target="_blank" rel="noopener"><strong>BaiduNetdiskPlugin-macOS</strong></a></p><p>在终端命令工具Terminal中输入：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> ~/Downloads &amp;&amp; git <span class="hljs-built_in">clone</span> https://github.com/CodeTips/BaiduNetdiskPlugin-macOS.git &amp;&amp; ./BaiduNetdiskPlugin-macOS/Other/Install.sh</span><br></pre></td></tr></table></figure><p>前提是需要安装git工具，若没有安装请自行百度。</p><p>安装成功后显示SVIP到2028年。这个只是在客户端更改的假VIP权限，登陆网页版或者其他平台的百度网盘依然是普通注册会员。</p>]]></content>
    
    <summary type="html">
    
      macOS版本百度网盘限速破解
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="破解" scheme="https://mengfeimu.github.io/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX 相关</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-03-01-latex/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-03-01-latex/</id>
    <published>2019-06-06T09:54:46.000Z</published>
    <updated>2019-03-08T17:13:49.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>content<br>{:toc}<h1 id="keynote上使用LaTeX公式"><a href="#keynote上使用LaTeX公式" class="headerlink" title="keynote上使用LaTeX公式"></a><del>keynote上使用LaTeX公式</del></h1></li></ul><p><del>macOS上的keynote对公式的支持很差，而且暂时不支持LaTeX，为了在keynote上使用LaTeX公式，采用以下办法：<strong>安装<a href="https://www.chachatelier.fr/latexit/latexit-downloads.php?lang=en" target="_blank" rel="noopener">LaTeXiT</a></strong>。</del></p><p><del>如果你的电脑上之前没有装过LaTeX全家桶，那么当你打开LaTeXiT之后会提示没有安装pdflatex、ghostscript之类的相关LaTeX包，执行以下操作之一：</del></p><ol><li><p><del>安装<a href="http://www.tug.org/mactex/mactex-download.html" target="_blank" rel="noopener">MacTex</a>（3G左右大小），一步到位，所有包全部安装好，缺点是太大。</del></p></li><li><p><del>安装BasicTex+ghostscript</del></p><ul><li><p><del>安装基础版本的<a href="http://www.tug.org/mactex/morepackages.html" target="_blank" rel="noopener">BasicTex</a>（100M左右大小）</del></p></li><li><p><del>使用命令行<a href="https://brew.sh" target="_blank" rel="noopener">brew</a>工具安装<a href="https://ghostscript.com" target="_blank" rel="noopener">ghostscript</a>：</del></p></li></ul></li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ghostscript</span><br></pre></td></tr></table></figure><p><del>然后，就可以愉快地使用LaTeXiT了，enjoy。</del></p><p>更新：20190228</p><p>从去年某个版本开始，keynote以及其他iWork组件已经支持LaTeX了，无需再用此方法。基本常用的LaTeX语法都支持，可以参考apple官网给出的示例：<a href="https://support.apple.com/zh-cn/HT202501#latexcommands" target="_blank" rel="noopener">中文链接</a> &amp; <a href="https://support.apple.com/en-us/HT202501#latexcommands" target="_blank" rel="noopener">英文链接</a>。</p><h1 id="在该博客中使用数学公式"><a href="#在该博客中使用数学公式" class="headerlink" title="在该博客中使用数学公式"></a>在该博客中使用数学公式</h1><p>在hexo博客中使用数学公式时，不能像在Typora等Markdown公式中一样方便。参考<a href="https://blog.zhangruipeng.me/hexo-theme-minos/Writing-Math-Formulas-Using-MathJax/" target="_blank" rel="noopener">https://blog.zhangruipeng.me/hexo-theme-minos/Writing-Math-Formulas-Using-MathJax/</a> 。 需要写成MathJax格式的。简而言之，如果要在行内添加公式，需要在公式前加<code>\\(</code>，公式后加<code>\\)</code>写成：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\( y = \sum_&#123;t=1&#125;^T x_t \\)</span><br></pre></td></tr></table></figure><p>这样显示效果为\(y = \sum_{t=1}^T x_t\)。</p><p>单独成行的公式，需要在前后各加<code>$$</code>写成：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ y = \sum_t=1^T x_t $$</span><br></pre></td></tr></table></figure><p>显示效果为$$ y = \sum_{t=1}^T x_t $$。</p>]]></content>
    
    <summary type="html">
    
      LaTeX相关
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="macOS" scheme="https://mengfeimu.github.io/tags/macOS/"/>
    
      <category term="LaTeX" scheme="https://mengfeimu.github.io/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3</title>
    <link href="https://mengfeimu.github.io/2019/06/06/tool/2018-07-27-sublime/"/>
    <id>https://mengfeimu.github.io/2019/06/06/tool/2018-07-27-sublime/</id>
    <published>2019-06-06T09:54:46.000Z</published>
    <updated>2019-03-26T23:44:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装sublime-Text-3"><a href="#安装sublime-Text-3" class="headerlink" title="安装sublime Text 3"></a>安装sublime Text 3</h1><ol><li><p>官网下载安装：<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">https://www.sublimetext.com/</a></p></li><li><p>安装package control: <a href="https://packagecontrol.io/installation#st3" target="_blank" rel="noopener">https://packagecontrol.io/installation#st3</a></p></li><li><p>打开preferences -&gt; package control，或者Ctrl+Shift+P，输入install，选择第一项install package，输入想要安装的anaconda</p><a id="more"></a><p>设置python路径</p><p>windows下查看在jupyter notebook中输入</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> sys</span><br><span class="line">print(sys.executable)</span><br><span class="line"><span class="hljs-comment"># 输出结果即为python的路径</span></span><br></pre></td></tr></table></figure><p>macOS下查看python路径，在terminal中输入：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">which</span> python</span><br></pre></td></tr></table></figure><p>打开preferences -&gt; Package settings -&gt; Anaconda -&gt; settings-default，找到”python_interpreter”，将路径替换为python路径</p></li><li><p>第一次使用sublime时，设置git同步，参照<a href="https://mengfeimu.github.io/2018/07/27/git/">git工具安装与使用</a>：</p></li><li><p>同步github项目<a href="https://github.com/mengfeimu/sublimeText3_packages" target="_blank" rel="noopener">sublimeText3_packages</a>到本地sublime的数据目录（查看目录：preferences -&gt; browsing packages）</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> local_dir</span><br><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:mengfeimu/sublimeText3_packages.git .</span><br></pre></td></tr></table></figure></li><li><p>重新打开sublime即可，自动依次下载以前安装过的packages。</p><ol><li>需要重新设置Anaconda packages中的python路径。</li></ol></li></ol><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>Alt + -: 跳转上次编辑的位置</p><p>Alt + Shift+-: 反跳转</p><p>Ctrl + B: 编译并运行</p><p>Ctrl + /: 注释</p><p>Ctrl + R: 显示函数列表</p><h1 id="有用设置"><a href="#有用设置" class="headerlink" title="有用设置"></a>有用设置</h1><h2 id="tab键用空格代替"><a href="#tab键用空格代替" class="headerlink" title="tab键用空格代替"></a>tab键用空格代替</h2><p>防止代码出错，用四个空格代替tab键的输出：</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">"translate_tabs_to_spaces":</span> <span class="hljs-literal">true</span></span><br></pre></td></tr></table></figure><h2 id="自动检查拼写错误"><a href="#自动检查拼写错误" class="headerlink" title="自动检查拼写错误"></a>自动检查拼写错误</h2><p>在sublime中依次打开<code>preferences -&gt; settings -&gt; preferences.settings-user</code>，添加一行：</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">"spell_check":</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span></span><br></pre></td></tr></table></figure><p>(也可以在<code>preferences.settings-default</code>中将<code>spell_check</code>的值<code>false</code>改为<code>true</code>)</p><h1 id="一些有用的packages"><a href="#一些有用的packages" class="headerlink" title="一些有用的packages"></a>一些有用的packages</h1><h2 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a><a href="https://packagecontrol.io/packages/Anaconda" target="_blank" rel="noopener">Anaconda</a></h2><h2 id="ConvertToUTF8"><a href="#ConvertToUTF8" class="headerlink" title="ConvertToUTF8"></a><a href="https://packagecontrol.io/packages/ConvertToUTF8" target="_blank" rel="noopener">ConvertToUTF8</a></h2><p>有些文本文件由于编码格式问题在macOS下打开乱码，安装此插件解决。</p><h2 id="Alignment"><a href="#Alignment" class="headerlink" title="Alignment"></a><a href="https://packagecontrol.io/packages/Alignment" target="_blank" rel="noopener">Alignment</a></h2><p>代码对齐，Ctrl+Alt+A</p><h2 id="AutoFileName"><a href="#AutoFileName" class="headerlink" title="AutoFileName"></a><a href="https://packagecontrol.io/packages/AutoFileName" target="_blank" rel="noopener">AutoFileName</a></h2><p>在代码中自动补全文件路径和文件名。Tab</p><h2 id="EJS2"><a href="#EJS2" class="headerlink" title="EJS2"></a><a href="https://packagecontrol.io/packages/EJS%202" target="_blank" rel="noopener">EJS2</a></h2><p>.ejs文件代码高亮</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装sublime-Text-3&quot;&gt;&lt;a href=&quot;#安装sublime-Text-3&quot; class=&quot;headerlink&quot; title=&quot;安装sublime Text 3&quot;&gt;&lt;/a&gt;安装sublime Text 3&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;官网下载安装：&lt;a href=&quot;https://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.sublimetext.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装package control: &lt;a href=&quot;https://packagecontrol.io/installation#st3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://packagecontrol.io/installation#st3&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开preferences -&amp;gt; package control，或者Ctrl+Shift+P，输入install，选择第一项install package，输入想要安装的anaconda&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="工具" scheme="https://mengfeimu.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="sublime" scheme="https://mengfeimu.github.io/tags/sublime/"/>
    
  </entry>
  
</feed>
